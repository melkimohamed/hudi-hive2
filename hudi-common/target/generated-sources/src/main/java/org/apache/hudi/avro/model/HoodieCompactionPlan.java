/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.apache.hudi.avro.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HoodieCompactionPlan extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4845148100810233419L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HoodieCompactionPlan\",\"namespace\":\"org.apache.hudi.avro.model\",\"fields\":[{\"name\":\"operations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"HoodieCompactionOperation\",\"fields\":[{\"name\":\"baseInstantTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"deltaFilePaths\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}],\"default\":null},{\"name\":\"dataFilePath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"fileId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"partitionPath\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"metrics\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"double\",\"avro.java.string\":\"String\"}],\"default\":null}]}}],\"default\":null},{\"name\":\"extraMetadata\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"version\",\"type\":[\"int\",\"null\"],\"default\":1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<HoodieCompactionPlan> ENCODER =
      new BinaryMessageEncoder<HoodieCompactionPlan>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HoodieCompactionPlan> DECODER =
      new BinaryMessageDecoder<HoodieCompactionPlan>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<HoodieCompactionPlan> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<HoodieCompactionPlan> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<HoodieCompactionPlan>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this HoodieCompactionPlan to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a HoodieCompactionPlan from a ByteBuffer. */
  public static HoodieCompactionPlan fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> operations;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> extraMetadata;
  @Deprecated public java.lang.Integer version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HoodieCompactionPlan() {}

  /**
   * All-args constructor.
   * @param operations The new value for operations
   * @param extraMetadata The new value for extraMetadata
   * @param version The new value for version
   */
  public HoodieCompactionPlan(java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> operations, java.util.Map<java.lang.String,java.lang.String> extraMetadata, java.lang.Integer version) {
    this.operations = operations;
    this.extraMetadata = extraMetadata;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return operations;
    case 1: return extraMetadata;
    case 2: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: operations = (java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation>)value$; break;
    case 1: extraMetadata = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 2: version = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'operations' field.
   * @return The value of the 'operations' field.
   */
  public java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> getOperations() {
    return operations;
  }

  /**
   * Sets the value of the 'operations' field.
   * @param value the value to set.
   */
  public void setOperations(java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> value) {
    this.operations = value;
  }

  /**
   * Gets the value of the 'extraMetadata' field.
   * @return The value of the 'extraMetadata' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getExtraMetadata() {
    return extraMetadata;
  }

  /**
   * Sets the value of the 'extraMetadata' field.
   * @param value the value to set.
   */
  public void setExtraMetadata(java.util.Map<java.lang.String,java.lang.String> value) {
    this.extraMetadata = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /**
   * Creates a new HoodieCompactionPlan RecordBuilder.
   * @return A new HoodieCompactionPlan RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCompactionPlan.Builder newBuilder() {
    return new org.apache.hudi.avro.model.HoodieCompactionPlan.Builder();
  }

  /**
   * Creates a new HoodieCompactionPlan RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HoodieCompactionPlan RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCompactionPlan.Builder newBuilder(org.apache.hudi.avro.model.HoodieCompactionPlan.Builder other) {
    return new org.apache.hudi.avro.model.HoodieCompactionPlan.Builder(other);
  }

  /**
   * Creates a new HoodieCompactionPlan RecordBuilder by copying an existing HoodieCompactionPlan instance.
   * @param other The existing instance to copy.
   * @return A new HoodieCompactionPlan RecordBuilder
   */
  public static org.apache.hudi.avro.model.HoodieCompactionPlan.Builder newBuilder(org.apache.hudi.avro.model.HoodieCompactionPlan other) {
    return new org.apache.hudi.avro.model.HoodieCompactionPlan.Builder(other);
  }

  /**
   * RecordBuilder for HoodieCompactionPlan instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HoodieCompactionPlan>
    implements org.apache.avro.data.RecordBuilder<HoodieCompactionPlan> {

    private java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> operations;
    private java.util.Map<java.lang.String,java.lang.String> extraMetadata;
    private java.lang.Integer version;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieCompactionPlan.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.operations)) {
        this.operations = data().deepCopy(fields()[0].schema(), other.operations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.extraMetadata)) {
        this.extraMetadata = data().deepCopy(fields()[1].schema(), other.extraMetadata);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing HoodieCompactionPlan instance
     * @param other The existing instance to copy.
     */
    private Builder(org.apache.hudi.avro.model.HoodieCompactionPlan other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.operations)) {
        this.operations = data().deepCopy(fields()[0].schema(), other.operations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.extraMetadata)) {
        this.extraMetadata = data().deepCopy(fields()[1].schema(), other.extraMetadata);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'operations' field.
      * @return The value.
      */
    public java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> getOperations() {
      return operations;
    }

    /**
      * Sets the value of the 'operations' field.
      * @param value The value of 'operations'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder setOperations(java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation> value) {
      validate(fields()[0], value);
      this.operations = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'operations' field has been set.
      * @return True if the 'operations' field has been set, false otherwise.
      */
    public boolean hasOperations() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'operations' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder clearOperations() {
      operations = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'extraMetadata' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getExtraMetadata() {
      return extraMetadata;
    }

    /**
      * Sets the value of the 'extraMetadata' field.
      * @param value The value of 'extraMetadata'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder setExtraMetadata(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[1], value);
      this.extraMetadata = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'extraMetadata' field has been set.
      * @return True if the 'extraMetadata' field has been set, false otherwise.
      */
    public boolean hasExtraMetadata() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'extraMetadata' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder clearExtraMetadata() {
      extraMetadata = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public java.lang.Integer getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder setVersion(java.lang.Integer value) {
      validate(fields()[2], value);
      this.version = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public org.apache.hudi.avro.model.HoodieCompactionPlan.Builder clearVersion() {
      version = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public HoodieCompactionPlan build() {
      try {
        HoodieCompactionPlan record = new HoodieCompactionPlan();
        record.operations = fieldSetFlags()[0] ? this.operations : (java.util.List<org.apache.hudi.avro.model.HoodieCompactionOperation>) defaultValue(fields()[0]);
        record.extraMetadata = fieldSetFlags()[1] ? this.extraMetadata : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[1]);
        record.version = fieldSetFlags()[2] ? this.version : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HoodieCompactionPlan>
    WRITER$ = (org.apache.avro.io.DatumWriter<HoodieCompactionPlan>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HoodieCompactionPlan>
    READER$ = (org.apache.avro.io.DatumReader<HoodieCompactionPlan>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
